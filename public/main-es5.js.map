{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authguard.guard.ts","webpack:///src/app/forget-pssword/forget-pssword.component.ts","webpack:///src/app/forget-pssword/forget-pssword.component.html","webpack:///src/app/login/login-service.service.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/main/create-project/create-project-service.service.ts","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/app/main/not-found-page/not-found-page.component.ts","webpack:///src/app/main/not-found-page/not-found-page.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","loadChildren","m","MainModule","UserModule","ReviewerModule","ApproverModule","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthguardGuard","router","next","state","window","localStorage","getItem","navigate","providedIn","ForgetPsswordComponent","loginModel","onSubmit","LoginServiceService","userId","password","setItem","LoginComponent","_loginService","route","loader","AdminreturnUrl","snapshot","queryParams","UserreturnUrl","ResolverreturnUrl","ApproverReturnUsrl","myLoginForm","required","credentials","value","userid","userName","output","Login","setTimeout","msg","CreateProjectServiceService","MainComponent","roter","submenu","click","preventDefault","toggleClass","removeItem","subMenu1","logout","NotFoundPageComponent","environment","production","bootstrapModule","catch","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,QAAMC,MAAM,GAAW,CACrB;AAACC,UAAI,EAAC,EAAN;AAAUC,gBAAU,EAAC,OAArB;AAA+BC,eAAS,EAAC;AAAzC,KADqB,EAErB;AAACF,UAAI,EAAG,OAAR;AAAiBG,eAAS,EAAE;AAA5B,KAFqB,EAGrB;AAACH,UAAI,EAAG,QAAR;AAAkBG,eAAS,EAAE;AAA7B,KAHqB,EAIrB;AAACH,UAAI,EAAG,MAAR;AAAgBI,iBAAW,EAAC,CAAC,+DAAD,CAA5B;AAAgDC,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA,0CAA6Bd,IAA7B,CAAkC,UAAAe,CAAC;AAAA,iBAAIA,CAAC,CAACC,UAAN;AAAA,SAAnC,CAAN;AAAA;AAA9D,KAJqB,EAKrB;AAACP,UAAI,EAAG,MAAR;AAAkBI,iBAAW,EAAC,CAAC,+DAAD,CAA9B;AAAmDC,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA,0CAA6Bd,IAA7B,CAAkC,UAAAe,CAAC;AAAA,iBAAIA,CAAC,CAACE,UAAN;AAAA,SAAnC,CAAN;AAAA;AAAjE,KALqB,EAMrB;AAACR,UAAI,EAAG,UAAR;AAAqBI,iBAAW,EAAC,CAAC,+DAAD,CAAjC;AAAwDC,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA,kDAAqCd,IAArC,CAA0C,UAAAe,CAAC;AAAA,iBAAIA,CAAC,CAACG,cAAN;AAAA,SAA3C,CAAN;AAAA;AAAtE,KANqB,EAOrB;AAACT,UAAI,EAAG,UAAR;AAAqBI,iBAAW,EAAC,CAAC,+DAAD,CAAjC;AAAwDC,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA,kDAAqCd,IAArC,CAA0C,UAAAe,CAAC;AAAA,iBAAIA,CAAC,CAACI,cAAN;AAAA,SAA3C,CAAN;AAAA;AAAtE,KAPqB,EAQrB;AAACV,UAAI,EAAG,IAAR;AAAcG,eAAS,EAAE;AAAzB,KARqB,CAAvB;;QAgBaQ,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBb,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBY,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBb,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACxB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaiB,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,OAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAiCaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,+DAAD,EAAgB,+GAAhB,C;AAA4C,gBAP9C,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,kEAJO,CAO8C;;;;0HAG5CA,S,EAAS;AAAA,uBAjBlB,2DAiBkB,EAhBlB,qEAgBkB,EAflB,kEAekB,EAdlB,+FAckB;AAdI,kBAKtB,uEALsB,EAMtB,oEANsB,EAOtB,0DAPsB,EAQtB,kEARsB;AAcJ,O;AANC,K;;;;;sEAMVA,S,EAAS;cAnBrB,sDAmBqB;eAnBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,qEAFY,EAGZ,kEAHY,EAIZ,+FAJY,CADN;AASRP,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,kEAJO,CATD;AAgBRQ,mBAAS,EAAE,CAAC,+DAAD,EAAgB,+GAAhB,CAhBH;AAiBRC,mBAAS,EAAE,CAAC,2DAAD;AAjBH,S;AAmBY,Q;;;;;;;;;;;;;;;;;;ACjCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,c;;;AACX,8BAAoBC,MAApB,EAAiC;AAAA;;AAAb,aAAAA,MAAA,GAAAA,MAAA;AAAgB;;;;oCAElCC,I,EACAC,K,EAA0B;AACvB,cAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,KAAyC,IAA5C,EACA;AACE,mBAAO,IAAP;AACD,WAHD,MAII;AACF,iBAAKL,MAAL,CAAYM,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA,mBAAO,KAAP;AACD;;AACF,iBAAO,IAAP;AACH;;;;;;;uBAdUP,c,EAAc,8G;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVQ,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSgB;;AAAmE;;AAAgB;;;;;;AAKnF;;AAA6D;;AAA6B;;;;;;AAK1F;;AAAmE;;AAA6B;;;;QDZnGC,sB;;;AAEX,wCAAc;AAAA;;AADd,aAAAC,UAAA,GAAe,EAAf;AACiB;;;;mCAET,CACP;;;mCACO,CAGP;;;;;;;uBATUD,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,yC;AAAA,e;AAAA,a;AAAA,4iC;AAAA;AAAA;ACPnC;;AACI;;AACI;;AAAkB;AAAA,mBAAY,IAAAE,QAAA,EAAZ;AAAsB,WAAtB;;AACd;;AACI;;AAAI;;AAAe;;AACvB;;AACA;;AACI;;AAA4B;;AAAS;;AACrC;;AAAiG;AAAA;AAAA;;AAAjG;;AACA;;AACJ;;AACA;;AACI;;AAA6B;;AAAY;;AACzC;;AAAoH;AAAA;AAAA;;AAApH;;AACA;;AACJ;;AACA;;AACI;;AAA6B;;AAAgB;;AAC7C;;AAA8H;AAAA;AAAA;;AAA9H;;AACA;;AACJ;;AACA;;AACI;;AAA2F;;AAAO;;AACtG;;AACA;;AACI;;AAA0E;;AAAiC;;AAC/G;;AACJ;;AACJ;;AACJ;;;;;;;;;;;;AArBiH;;AAAA;;AACtE;;AAAA;;AAIyF;;AAAA;;AACzF;;AAAA;;AAImG;;AAAA;;AACnG;;AAAA;;AAGL;;AAAA;;;;;;;;;sEDfzBF,sB,EAAsB;cALlC,uDAKkC;eALxB;AACThB,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;AEPnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaiB,mB;;;AAEX,qCAAc;AAAA;AAAG;;;;8BACXC,M,EAAcC,Q,EAAe;AAG9B,cAAGD,MAAM,IAAE,OAAR,IAAmBC,QAAQ,IAAE,OAAhC,EACC;AACEV,kBAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,QAA5B,EAAqCF,MAArC;AACAT,kBAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,UAA5B,EAAuCD,QAAvC;AACA,mBAAO,OAAP;AACD,WALF,MAMK,IAAGD,MAAM,IAAE,MAAR,IAAkBC,QAAQ,IAAE,OAA/B,EACJ;AACEV,kBAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,QAA5B,EAAqCF,MAArC;AACAT,kBAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,UAA5B,EAAuCD,QAAvC;AACA,mBAAO,MAAP;AACD,WALG,MAMA,IAAGD,MAAM,IAAE,UAAR,IAAsBC,QAAQ,IAAE,OAAnC,EACJ;AACEV,kBAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,QAA5B,EAAqCF,MAArC;AACAT,kBAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,UAA5B,EAAuCD,QAAvC;AACA,mBAAO,UAAP;AACD,WALG,MAMA,IAAGD,MAAM,IAAE,UAAR,IAAsBC,QAAQ,IAAE,OAAnC,EACJ;AACEV,kBAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,QAA5B,EAAqCF,MAArC;AACAT,kBAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,UAA5B,EAAuCD,QAAvC;AACA,mBAAO,UAAP;AACD,WALG,MAOJ;AACE,mBAAO,KAAP;AACD;AACN;;;;;;;uBAlCUF,mB;AAAmB,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACVJ,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;ACLhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgCgB;;AAA8G;;AAAyB;;;;;;AAKvI;;AAA8G;;AAAmB;;;;;;AAMzB;;;;QDjC3GQ,c;;;AAcX,8BAAoBC,aAApB,EAA8DhB,MAA9D,EAAqFiB,KAArF,EAA4G;AAAA;;AAAxF,aAAAD,aAAA,GAAAA,aAAA;AAA0C,aAAAhB,MAAA,GAAAA,MAAA;AAAuB,aAAAiB,KAAA,GAAAA,KAAA;AAbvF,aAAAR,UAAA,GAAe,EAAf;AAEA,aAAAS,MAAA,GAAe,KAAf;AAWiH;;;;mCAEvG;AACL,eAAKC,cAAL,GAAoB,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,WAApB,CAAgC,gBAAhC,KAAqD,OAAzE;AACA,eAAKC,aAAL,GAAmB,KAAKL,KAAL,CAAWG,QAAX,CAAoBC,WAApB,CAAgC,eAAhC,KAAoD,OAAvE;AACA,eAAKE,iBAAL,GAAuB,KAAKN,KAAL,CAAWG,QAAX,CAAoBC,WAApB,CAAgC,mBAAhC,KAAwD,WAA/E;AACA,eAAKG,kBAAL,GAAwB,KAAKP,KAAL,CAAWG,QAAX,CAAoBC,WAApB,CAAgC,uBAAhC,KAA4D,WAApF,CAJK,CAKN;;AACA,eAAKI,WAAL,GAAiB,IAAI,wDAAJ,CACf;AACE,wBAAY,IAAI,0DAAJ,CAAgB,IAAhB,EAAqB,0DAAWC,QAAhC,CADd;AAEE,wBAAY,IAAI,0DAAJ,CAAgB,IAAhB,EAAqB,0DAAWA,QAAhC;AAFd,WADe,CAAjB;AAMD;;;mCAEO;AAAA;;AAIN,eAAKC,WAAL,GAAiB,KAAKF,WAAL,CAAiBG,KAAlC,CAJM,CAImC;;AACvC,eAAKC,MAAL,GAAY,KAAKF,WAAL,CAAiBG,QAA7B,CALI,CAKkC;;AACtC,eAAKjB,QAAL,GAAc,KAAKc,WAAL,CAAiBd,QAA/B,CANI,CAMoC;;AACxC,cAAIkB,MAAM,GAAC,KAAKf,aAAL,CAAmBgB,KAAnB,CAAyB,KAAKH,MAA9B,EAAsC,KAAKhB,QAA3C,CAAX;;AAEA,eAAKK,MAAL,GAAc,IAAd,CATI,CASgB;;AACpBe,oBAAU,CAAC,YAAI;AACb,iBAAI,CAACf,MAAL,GAAc,KAAd;AACJ,WAFY,EAEV,GAFU,CAAV;;AAGD,cAAGa,MAAM,KAAG,OAAZ,EACA;AAEG,iBAAK/B,MAAL,CAAYM,QAAZ,CAAqB,CAAC,KAAKa,cAAN,CAArB;AACF,WAJD,MAKK,IAAGY,MAAM,KAAG,MAAZ,EACL;AACG,iBAAK/B,MAAL,CAAYM,QAAZ,CAAqB,CAAC,KAAKgB,aAAN,CAArB;AACF,WAHI,MAIA,IAAGS,MAAM,KAAG,UAAZ,EACL;AACG,iBAAK/B,MAAL,CAAYM,QAAZ,CAAqB,CAAC,KAAKiB,iBAAN,CAArB;AACF,WAHI,MAIA,IAAGQ,MAAM,KAAG,UAAZ,EACL;AACG,iBAAK/B,MAAL,CAAYM,QAAZ,CAAqB,CAAC,KAAKkB,kBAAN,CAArB;AACF,WAHI,MAKD;AACO,iBAAKU,GAAL,GAAS,uBAAT;AACV;AACH;;;;;;;uBAhEUnB,c,EAAc,2I,EAAA,uH,EAAA,+H;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,2tB;AAAA;AAAA;ACV3B;;AACI;;AAuBI;;AAAgC;AAAA,mBAAY,IAAAL,QAAA,EAAZ;AAAsB,WAAtB;;AAC5B;;AACI;;AAAI;;AAAO;;AACf;;AACA;;AAAI;;AAAO;;AACX;;AACI;;AAAO;;AAAS;;AAChB;;AACA;;AACJ;;AACA;;AACI;;AAAO;;AAAQ;;AACf;;AACA;;AACJ;;AACA;;AACI;;AAA4B;;AAAiB;;AACjD;;AACA;;AACI;;AAA+F;;AAAS;;AACtG;;AAKN;;AACJ;;AACJ;;AACJ;;;;AA5Bc;;AAAA;;AAIE;;AAAA;;AAI2B;;AAAA;;AAKA;;AAAA;;AAML;;AAAA;;AAAsI;;AAAA;;;;;;;;;sEDjC/JK,c,EAAc;cAL1B,uDAK0B;eALhB;AACTvB,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKayC,2B,GAEX,uCAAc;AAAA;AAAG,K;;;uBAFNA,2B;AAA2B,K;;;aAA3BA,2B;AAA2B,eAA3BA,2BAA2B,K;AAAA,kBAF1B;;;;;sEAEDA,2B,EAA2B;cAHvC,wDAGuC;eAH5B;AACV5B,oBAAU,EAAE;AADF,S;AAG4B,Q;;;;;;;;;;;;;;;;;;;;ACLxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACWgB;;AACI;;AACI;;AACI;;AAA0G;;AAA+C;;AAAI;;AAC7J;;AAAoE;;AAA+C;;AAAkB;;AACrI;;AAAmE;;AAA+C;;AAAiB;;AACvI;;AACJ;;AACJ;;;;AAL8C;;AAAA;;;;QDLjD6B,a;;;AACX,6BAAoBC,KAApB,EAAgC;AAAA;;AAAZ,aAAAA,KAAA,GAAAA,KAAA;AAgBpB,aAAAC,OAAA,GAAgB,KAAhB;AAdC;;;;mCAEO;AACN,6CAAC,CAAC,cAAD,CAAD,CAAkBC,KAAlB,CAAwB,UAASvE,CAAT,EAAY;AAClCA,aAAC,CAACwE,cAAF;AACA,+CAAC,CAAC,UAAD,CAAD,CAAcC,WAAd,CAA0B,SAA1B;AACD,WAHD;AAID;;;iCACK;AAEJtC,gBAAM,CAACC,YAAP,CAAoBsC,UAApB,CAA+B,QAA/B;AACAvC,gBAAM,CAACC,YAAP,CAAoBsC,UAApB,CAA+B,UAA/B;AACC,eAAKL,KAAL,CAAW/B,QAAX,CAAoB,CAAC,QAAD,CAApB;AACF;;;mCAEO;AAEN,eAAKgC,OAAL,GAAa,CAAC,KAAKA,OAAnB;AACD;;;;;;;uBArBUF,a,EAAa,uH;AAAA,K;;;YAAbA,a;AAAa,2B;AAAA,e;AAAA,a;AAAA,shD;AAAA;AAAA;ACT1B;;AAEI;;AACI;;AACI;;AAAY;;AAAZ;;AACJ;;AACA;;AACI;;AACI;;AAAkJ;;AAAK;;AACvJ;;AAA8G;;AAAc;;AAC5H;;AAA6E;AAAA,mBAAS,IAAAO,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAQ;;AAAmC;;AAC7I;;AASA;;AAAqG;;AAAgB;;AACrH;;AAA0G;;AAAe;;AAC7H;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAyB;;AAA6C;;AAC1E;;AACA;;AACI;;AACI;;AAAI;;AAAY;;AAAK;;AAAI;;AAAzB;;AAEA;;AAAI;;AAAY;AAAA,mBAAS,IAAAC,MAAA,EAAT;AAAiB,WAAjB;;AAA4C;;AAAO;;AAAiD;;AACpH;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AAGJ;;;;AAxCuE;;AAAA;;AAGlD;;AAAA;;;;;;;;;sEDFRR,a,EAAa;cALzB,uDAKyB;eALf;AACT5C,kBAAQ,EAAC,MADA;AAETC,qBAAW,EAAC,uBAFH;AAGTC,mBAAS,EAAC,CAAC,uBAAD;AAHD,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;AET1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOamD,qB;;;AAEX,uCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,qB;AAAqB,K;;;YAArBA,qB;AAAqB,yC;AAAA,c;AAAA,a;AAAA,oM;AAAA;AAAA;ACPlC;;AACE;;AACE;;AACE;;AACA;;AAAyD;;AAAU;;AACrE;;AACF;;AACF;;;;;;;;;sEDAaA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTrD,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;AEPlC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMoD,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,EACGC,KADH,CACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { LoginComponent } from './login/login.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AuthguardGuard } from './authguard.guard';\nimport { ForgetPsswordComponent } from './forget-pssword/forget-pssword.component';\nimport { NotFoundPageComponent } from './main/not-found-page/not-found-page.component';\n\n\nconst routes: Routes = [\n  {path:'', redirectTo:'login',  pathMatch:'full'},\n  {path : 'login', component: LoginComponent},\n  {path : 'forget', component: ForgetPsswordComponent},\n  {path : 'main', canActivate:[AuthguardGuard],   loadChildren: () => import('./main/main.module').then(m => m.MainModule)},\n  {path : 'user',   canActivate:[AuthguardGuard],    loadChildren: () => import('./user/user.module').then(m => m.UserModule)},\n  {path : 'reviewer',  canActivate:[AuthguardGuard],      loadChildren: () => import('./reviewer/reviewer.module').then(m => m.ReviewerModule)},\n  {path : 'approver',  canActivate:[AuthguardGuard],      loadChildren: () => import('./approver/approver.module').then(m => m.ApproverModule)},\n  {path : '**', component: NotFoundPageComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Ifcon';\n}\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { MainComponent } from './main/main.component';\nimport { AuthguardGuard } from './authguard.guard';\nimport { CreateProjectServiceService } from './main/create-project/create-project-service.service';\nimport { ForgetPsswordComponent } from './forget-pssword/forget-pssword.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    MainComponent,\n    ForgetPsswordComponent,\n\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n\n  ],\n  providers: [AuthguardGuard,CreateProjectServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardGuard implements CanActivate {\n  constructor(private router:Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n       if(window.localStorage.getItem('UserId') != null)\n       {\n         return true\n       }\n       else{\n         this.router.navigate(['/login']);\n         return false\n       }\n      return true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forget-pssword',\n  templateUrl: './forget-pssword.component.html',\n  styleUrls: ['./forget-pssword.component.scss']\n})\nexport class ForgetPsswordComponent implements OnInit {\n  loginModel:any={};\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onSubmit()\n  {\n\n  }\n}\n","<div class=\"password_change_forget\">\r\n    <div class=\"signup-form \">\r\n        <form #f='ngForm' (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-header\">\r\n                <h2>Forget Password</h2>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label style=\"width: 100%;\">User Name</label>\r\n                <input type=\"text\" placeholder=\"User Id\" #userId='ngModel' class=\"form-control\" name=\"User Name\" [(ngModel)]=\"loginModel.userid\" ngModel required style=\"width: 100%;\">\r\n                <small class=\"text-danger\" *ngIf=\"!userId.valid && userId.touched\">User Id required</small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label style=\"width: 100%; \">New Password</label>\r\n                <input type=\"password\" placeholder=\"New Password\" minlength=\"5\" #psw=\"ngModel\" class=\"form-control\" name=\"password\" [(ngModel)]=\"loginModel.password\" ngModel required style=\"width: 100%;\">\r\n                <small class=\"text-danger\" *ngIf=\"!psw.valid && psw.touched\">Password must be 5 characters</small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label style=\"width: 100%; \">Confirm Password</label>\r\n                <input type=\"password\" minlength=\"5\" placeholder=\"Confirm Password\" #Cnfpsw=\"ngModel\" class=\"form-control\" name=\"Cnfpassword\" [(ngModel)]=\"loginModel.Cnfpassword\" ngModel required style=\"width: 100%;\">\r\n                <small class=\"text-danger\" *ngIf=\"!Cnfpsw.valid && Cnfpsw.touched\">Password must be 5 characters</small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button type=\"submit\" [disabled]=\"!f.valid\" class=\"btn btn-primary btn-block btn-lg btttn\">Submit </button>\r\n            </div>\r\n            <div class=\"form-group text-left\">\r\n                <button type=\"button\" class=\"btn btn-outline-danger \" routerLink=\"/login\"><i class=\"fa fa-arrow-left\"></i> </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginServiceService {\n\n  constructor() { }\n  Login(userId:string,password:string)\n  {\n\n       if(userId=='admin' && password=='12345')\n        {\n          window.localStorage.setItem('UserId',userId);\n          window.localStorage.setItem('password',password);\n          return 'admin'\n        }\n       else if(userId=='user' && password=='12345')\n        {\n          window.localStorage.setItem('UserId',userId);\n          window.localStorage.setItem('password',password);\n          return 'user'\n        }\n       else if(userId=='reviewer' && password=='12345')\n        {\n          window.localStorage.setItem('UserId',userId);\n          window.localStorage.setItem('password',password);\n          return 'reviewer'\n        }\n       else if(userId=='approval' && password=='12345')\n        {\n          window.localStorage.setItem('UserId',userId);\n          window.localStorage.setItem('password',password);\n          return 'approver'\n        }\n        else\n        {\n          return false;\n        }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginServiceService } from './login-service.service';\nimport { Routes, ActivatedRoute } from '@angular/router';\nimport {Router} from \"@angular/router\";\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\nloginModel:any={};\nmsg:string;\nloader:boolean=false\nreturnUrl: string;\n   AdminreturnUrl: any;\n   UserreturnUrl: any;\n   ResolverreturnUrl: any;\n   ReviewerUserreturnUrl: any;\n   ApproverReturnUsrl: any;\n   myLoginForm:FormGroup;\n   credentials:any;\n  userid: any;\n  password: any;\n  constructor(private _loginService:LoginServiceService,private router:Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n     this.AdminreturnUrl=this.route.snapshot.queryParams['AdminreturnUrl'] || '/main'\n     this.UserreturnUrl=this.route.snapshot.queryParams['UserreturnUrl'] || '/user'\n     this.ResolverreturnUrl=this.route.snapshot.queryParams['ResolverreturnUrl'] || '/reviewer'\n     this.ApproverReturnUsrl=this.route.snapshot.queryParams['ReviewerUserreturnUrl'] || '/approver'\n    //  Reactive Form-\n    this.myLoginForm=new FormGroup(\n      {\n        'userName' :new FormControl(null,Validators.required),\n        'password': new FormControl(null,Validators.required)\n      }\n    )\n  }\n\n  onSubmit()\n  {\n\n\n    this.credentials=this.myLoginForm.value  // Credential where we store the formarray value\n      this.userid=this.credentials.userName // get UserId from form\n      this.password=this.credentials.password // get Password from form\n      var output=this._loginService.Login(this.userid, this.password);\n\n      this.loader = true; // this - is in component object context\n      setTimeout(()=>{    //<<<---    using ()=> syntax\n        this.loader = false;\n   }, 300);\n     if(output==='admin')\n     {\n\n        this.router.navigate([this.AdminreturnUrl])\n     }\n     else if(output==='user')\n     {\n        this.router.navigate([this.UserreturnUrl])\n     }\n     else if(output==='reviewer')\n     {\n        this.router.navigate([this.ResolverreturnUrl])\n     }\n     else if(output==='approver')\n     {\n        this.router.navigate([this.ApproverReturnUsrl])\n     }\n\n     else{\n                this.msg=\"Invalid credentials !\"\n     }\n  }\n\n}\n","<div class=\"password_change_forget\">\r\n    <div class=\"signup-form\">\r\n        <!-- <form #f='ngForm' (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-header\">\r\n                <h2>Sign In</h2>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>User Name</label>\r\n                <input type=\"text\" #userId='ngModel' class=\"form-control\" name=\"User Name\" [(ngModel)]=\"loginModel.userid\" ngModel required >\r\n                <small class=\"text-danger\" *ngIf=\"!userId.valid && userId.touched\">User Id required</small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Password</label>\r\n                <input type=\"password\" minlength=\"5\" #psw=\"ngModel\" class=\"form-control\" name=\"password\" [(ngModel)]=\"loginModel.password\" ngModel required>\r\n                <small class=\"text-danger\" *ngIf=\"!psw.valid && psw.touched\">Password must be 5 characters</small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <small routerLink=\"/forget\">Forget password ?</small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button type=\"submit\" [disabled]=\"!f.valid\" class=\"btn btn-primary btn-block btn-lg\">Sign In ? </button>\r\n            </div>\r\n        </form> -->\r\n\r\n        <form [formGroup]=\"myLoginForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-header\">\r\n                <h2>Sign In</h2>\r\n            </div>\r\n            <h6>{{msg}}</h6>\r\n            <div class=\"form-group\">\r\n                <label>User Name</label>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"userName\" name=\"User Name\">\r\n                <small class=\"text-danger\" *ngIf=\"!myLoginForm.get('userName').valid && myLoginForm.get('userName').touched \">UserId or email required </small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Password</label>\r\n                <input type=\"password\" minlength=\"5\" formControlName=\"password\" class=\"form-control\" name=\"password\">\r\n                <small class=\"text-danger\" *ngIf=\"!myLoginForm.get('password').valid && myLoginForm.get('password').touched \">Password required  </small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <small routerLink=\"/forget\">Forget password ?</small>\r\n            </div>\r\n            <div class=\"form-group text-center\">\r\n                <button type=\"submit\" [disabled]=\"!myLoginForm.valid\" class=\"btn btn-primary btn-block btn-sm\">Sign In  <span class=\"spinner-border spinner-border-sm ml-2\" *ngIf=\"loader\" role=\"status\" aria-hidden=\"true\"></span>\r\n                  </button>\r\n\r\n\r\n\r\n                <!-- <div class=\"loader \" ></div> -->\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateProjectServiceService {\n   porjectData:any;\n  constructor() { }\n\n}\n","import {Component} from '@angular/core';\r\nimport * as $ from 'jquery';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector:'main',\r\n  templateUrl:'./main.component.html',\r\n  styleUrls:['./main.component.scss']\r\n})\r\nexport class MainComponent{\r\n  constructor(private roter:Router){\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    $(\"#menu-toggle\").click(function(e) {\r\n      e.preventDefault();\r\n      $(\"#wrapper\").toggleClass(\"toggled\");\r\n    });\r\n  }\r\n  logout()\r\n  {\r\n    window.localStorage.removeItem('UserId');\r\n    window.localStorage.removeItem('password');\r\n     this.roter.navigate(['/login'])\r\n  }\r\n  submenu:boolean=false;\r\n  subMenu1()\r\n  {\r\n    this.submenu=!this.submenu;\r\n  }\r\n}\r\n","<div id=\"wrapper\">\r\n\r\n    <div class=\"bg-light border-right \" id=\"sidebar-wrapper\">\r\n        <div class=\"sidebar-logo\">\r\n            <a href=\"#\"><img src=\"assets/img/logo.png\" class=\"logo\" alt=\"\"></a>\r\n        </div>\r\n        <div class=\"list-group list-group-flush\">\r\n            <ul>\r\n                <li routerLink=\"/main/users\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\" class=\"list-group-item list-group-item-action\">Users</li>\r\n                <li routerLink=\"/main/projectDetail\" routerLinkActive=\"active\" class=\"list-group-item list-group-item-action\">Project Detail</li>\r\n                <li routerLinkActive=\"active\" class=\"list-group-item list-group-item-action\" (click)=\"subMenu1()\">Licence <i class=\"fa fa-chevron-down \"></i></li>\r\n                <div *ngIf=\"submenu\">\r\n                    <div class=\"dropdown_sidebar\">\r\n                        <ul>\r\n                            <li routerLinkActive=\"check_menu\" [routerLinkActiveOptions]=\"{ exact: true }\" routerLink=\"/main/licence\"> <i class=\"fa fa-check\" aria-hidden=\"true\"></i> View</li>\r\n                            <li routerLinkActive=\"check_menu\" routerLink=\"/main/updateLicence\"> <i class=\"fa fa-check\" aria-hidden=\"true\"></i> Update Licence Key</li>\r\n                            <li routerLinkActive=\"check_menu\" routerLink=\"/main/renewLicence\"> <i class=\"fa fa-check\" aria-hidden=\"true\"></i> Renew Licence Key</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <li routerLink=\"/main/logs\" routerLinkActive=\"active\" class=\"list-group-item list-group-item-action\">View Licence Key</li>\r\n                <li routerLink=\"/main/changePsw\" routerLinkActive=\"active\" class=\"list-group-item list-group-item-action\">Change Password</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div id=\"page-content-wrapper\">\r\n        <div class=\"header_main\">\r\n            <div class=\"Toggle_button\">\r\n                <button id=\"menu-toggle\"><i class=\"fa fa-bars\" aria-hidden=\"true\"></i></button>\r\n            </div>\r\n            <div class=\"manu\">\r\n                <ul>\r\n                    <li><a href=\"#\">Manoj</a><img src=\"assets/img/admin.jpg\" class=\"img-fluid userImage\" alt=\"\" style=\"width: 50px;height: 50px;\"></li>\r\n\r\n                    <li><a href=\"#\" (click)=\"logout()\" style=\"cursor: pointer;\">Logout <i class=\"fa fa-sign-out\" aria-hidden=\"true\"></i></a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"container-fluid\">\r\n            <div class=\"middle-content\">\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found-page',\n  templateUrl: './not-found-page.component.html',\n  styleUrls: ['./not-found-page.component.scss']\n})\nexport class NotFoundPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-lg-12 text-center\">\n      <img src=\"assets/img/notFound.jpg\" class=\"img-fluid\" alt=\"\">\n      <button routerLink=\"/users\" class=\"btn btn-outline-info\">Go to Home</button>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}