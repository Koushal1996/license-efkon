{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authguard.guard.ts","./src/app/forget-pssword/forget-pssword.component.ts","./src/app/forget-pssword/forget-pssword.component.html","./src/app/login/login-service.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/main/create-project/create-project-service.service.ts","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/main/not-found-page/not-found-page.component.ts","./src/app/main/not-found-page/not-found-page.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACF;AACd;AACU;AACgC;AACI;;;AAGvF,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAE,UAAU,EAAC,OAAO,EAAG,SAAS,EAAC,MAAM,EAAC;IAChD,EAAC,IAAI,EAAG,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC3C,EAAC,IAAI,EAAG,QAAQ,EAAE,SAAS,EAAE,+FAAsB,EAAC;IACpD,EAAC,IAAI,EAAG,MAAM,EAAE,WAAW,EAAC,CAAC,+DAAc,CAAC,EAAI,YAAY,EAAE,GAAG,EAAE,CAAC,2NAA4B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,EAAC;IACzH,EAAC,IAAI,EAAG,MAAM,EAAI,WAAW,EAAC,CAAC,+DAAc,CAAC,EAAK,YAAY,EAAE,GAAG,EAAE,CAAC,2NAA4B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,EAAC;IAC5H,EAAC,IAAI,EAAG,UAAU,EAAG,WAAW,EAAC,CAAC,+DAAc,CAAC,EAAO,YAAY,EAAE,GAAG,EAAE,CAAC,2PAAoC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,EAAC;IAC7I,EAAC,IAAI,EAAG,UAAU,EAAG,WAAW,EAAC,CAAC,+DAAc,CAAC,EAAO,YAAY,EAAE,GAAG,EAAE,CAAC,2PAAoC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,EAAC;IAC7I,EAAC,IAAI,EAAG,IAAI,EAAE,SAAS,EAAE,mGAAqB,EAAC;CAEhD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,OAAO,CAAC;KACjB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;6FDOlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACyB;AAEV;AAET;AACU;AACH;AACH;AACgD;AAChB;;AAsB5E,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,+DAAc,EAAC,+GAA2B,CAAC,YAP9C;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,kEAAmB;SAEpB;mIAIU,SAAS,mBAjBlB,2DAAY;QACZ,qEAAc;QACd,kEAAa;QACb,+FAAsB,aAKtB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,kEAAmB;6FAMV,SAAS;cAnBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAc;oBACd,kEAAa;oBACb,+FAAsB;iBAGvB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,kEAAmB;iBAEpB;gBACD,SAAS,EAAE,CAAC,+DAAc,EAAC,+GAA2B,CAAC;gBACvD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,cAAc;IACzB,YAAoB,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;IAAE,CAAC;IACpC,WAAW,CACT,IAA4B,EAC5B,KAA0B;QACvB,IAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,EAChD;YACE,OAAO,IAAI;SACZ;aACG;YACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK;SACb;QACF,OAAO,IAAI,CAAC;IAChB,CAAC;;4EAdU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICSlC,4EAAmE;IAAA,2EAAgB;IAAA,4DAAQ;;;IAK3F,4EAA6D;IAAA,wFAA6B;IAAA,4DAAQ;;;IAKlG,4EAAmE;IAAA,wFAA6B;IAAA,4DAAQ;;ADZjH,MAAM,sBAAsB;IAEjC;QADA,eAAU,GAAK,EAAE,CAAC;IACF,CAAC;IAEjB,QAAQ;IACR,CAAC;IACD,QAAQ;IAGR,CAAC;;4FATU,sBAAsB;sGAAtB,sBAAsB;QCPnC,yEACI;QAAA,yEACI;QAAA,6EACI;QADc,wJAAY,cAAU,IAAC;QACrC,yEACI;QAAA,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QAC5B,4DAAM;QACN,yEACI;QAAA,2EAA4B;QAAA,oEAAS;QAAA,4DAAQ;QAC7C,+EACA;QADiG,sMAA+B;QAAhI,4DACA;QAAA,wHAAmE;QACvE,4DAAM;QACN,0EACI;QAAA,4EAA6B;QAAA,wEAAY;QAAA,4DAAQ;QACjD,iFACA;QADoH,wMAAiC;QAArJ,4DACA;QAAA,wHAA6D;QACjE,4DAAM;QACN,0EACI;QAAA,4EAA6B;QAAA,4EAAgB;QAAA,4DAAQ;QACrD,iFACA;QAD8H,2MAAoC;QAAlK,4DACA;QAAA,wHAAmE;QACvE,4DAAM;QACN,0EACI;QAAA,8EAA2F;QAAA,mEAAO;QAAA,4DAAS;QAC/G,4DAAM;QACN,2EACI;QAAA,8EAA0E;QAAA,oEAAgC;QAAC,4DAAS;QACxH,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;;;;;;QArB2G,2DAA+B;QAA/B,0FAA+B;QACrG,0DAAuC;QAAvC,2FAAuC;QAIkD,0DAAiC;QAAjC,4FAAiC;QAC1H,0DAAiC;QAAjC,2FAAiC;QAIkE,0DAAoC;QAApC,+FAAoC;QACvI,0DAAuC;QAAvC,2FAAuC;QAG5C,0DAAqB;QAArB,gFAAqB;;6FDf9C,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAA2C;;AAKpC,MAAM,mBAAmB;IAE9B;IAAgB,CAAC;IACjB,KAAK,CAAC,MAAa,EAAC,QAAe;QAG9B,IAAG,MAAM,IAAE,OAAO,IAAI,QAAQ,IAAE,OAAO,EACtC;YACE,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAC,MAAM,CAAC,CAAC;YAC7C,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;YACjD,OAAO,OAAO;SACf;aACG,IAAG,MAAM,IAAE,MAAM,IAAI,QAAQ,IAAE,OAAO,EAC1C;YACE,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAC,MAAM,CAAC,CAAC;YAC7C,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;YACjD,OAAO,MAAM;SACd;aACG,IAAG,MAAM,IAAE,UAAU,IAAI,QAAQ,IAAE,OAAO,EAC9C;YACE,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAC,MAAM,CAAC,CAAC;YAC7C,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;YACjD,OAAO,UAAU;SAClB;aACG,IAAG,MAAM,IAAE,UAAU,IAAI,QAAQ,IAAE,OAAO,EAC9C;YACE,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAC,MAAM,CAAC,CAAC;YAC7C,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;YACjD,OAAO,UAAU;SAClB;aAED;YACE,OAAO,KAAK,CAAC;SACd;IACP,CAAC;;sFAlCU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIkB;;;;;;;IC4BpD,4EAA8G;IAAA,oFAAyB;IAAA,4DAAQ;;;IAK/I,4EAA8G;IAAA,6EAAmB;IAAA,4DAAQ;;;IAMjC,sEAA2G;;ADjC5N,MAAM,cAAc;IAczB,YAAoB,aAAiC,EAAS,MAAa,EAAU,KAAqB;QAAtF,kBAAa,GAAb,aAAa,CAAoB;QAAS,WAAM,GAAN,MAAM,CAAO;QAAU,UAAK,GAAL,KAAK,CAAgB;QAb5G,eAAU,GAAK,EAAE,CAAC;QAElB,WAAM,GAAS,KAAK;IAW4F,CAAC;IAE/G,QAAQ;QACL,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,OAAO;QAChF,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,OAAO;QAC9E,IAAI,CAAC,iBAAiB,GAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,WAAW;QAC1F,IAAI,CAAC,kBAAkB,GAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,uBAAuB,CAAC,IAAI,WAAW;QAChG,kBAAkB;QAClB,IAAI,CAAC,WAAW,GAAC,IAAI,wDAAS,CAC5B;YACE,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACrD,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAC,yDAAU,CAAC,QAAQ,CAAC;SACtD,CACF;IACH,CAAC;IAED,QAAQ;QAIN,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,gDAAgD;QACvF,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAC,uBAAuB;QAC7D,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAC,yBAAyB;QACjE,IAAI,MAAM,GAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEhE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,wCAAwC;QAC5D,UAAU,CAAC,GAAE,EAAE;YACb,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,GAAG,CAAC,CAAC;QACN,IAAG,MAAM,KAAG,OAAO,EACnB;YAEG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC7C;aACI,IAAG,MAAM,KAAG,MAAM,EACvB;YACG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC5C;aACI,IAAG,MAAM,KAAG,UAAU,EAC3B;YACG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;SAChD;aACI,IAAG,MAAM,KAAG,UAAU,EAC3B;YACG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SACjD;aAEG;YACO,IAAI,CAAC,GAAG,GAAC,uBAAuB;SAC1C;IACJ,CAAC;;4EAhEU,cAAc;8FAAd,cAAc;QCV3B,yEACI;QAAA,yEACI;QAsBA,0EACI;QAD4B,gJAAY,cAAU,IAAC;QACnD,yEACI;QAAA,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QACpB,4DAAM;QACN,qEAAI;QAAA,uDAAO;QAAA,4DAAK;QAChB,yEACI;QAAA,wEAAO;QAAA,qEAAS;QAAA,4DAAQ;QACxB,uEACA;QAAA,gHAA8G;QAClH,4DAAM;QACN,0EACI;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,uEACA;QAAA,gHAA8G;QAClH,4DAAM;QACN,0EACI;QAAA,4EAA4B;QAAA,6EAAiB;QAAA,4DAAQ;QACzD,4DAAM;QACN,0EACI;QAAA,8EAA+F;QAAA,oEAAS;QAAA,+GAAoG;QAC1M,4DAAS;QAKf,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;;QA5BQ,0DAAyB;QAAzB,sFAAyB;QAIvB,0DAAO;QAAP,wEAAO;QAIoB,0DAAkF;QAAlF,mJAAkF;QAKlF,0DAAkF;QAAlF,mJAAkF;QAMvF,0DAA+B;QAA/B,4FAA+B;QAAuG,0DAAc;QAAd,4EAAc;;6FDjC7K,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAA2C;;AAKpC,MAAM,2BAA2B;IAEtC;IAAgB,CAAC;;sGAFN,2BAA2B;8GAA3B,2BAA2B,WAA3B,2BAA2B,mBAF1B,MAAM;6FAEP,2BAA2B;cAHvC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACZ;;;;;;ICUZ,sEACI;IAAA,0EACI;IAAA,qEACI;IAAA,yEAA0G;IAAA,mEAA8C;IAAC,gEAAI;IAAA,4DAAK;IAClK,yEAAoE;IAAA,mEAA8C;IAAC,8EAAkB;IAAA,4DAAK;IAC1I,yEAAmE;IAAA,oEAA8C;IAAC,8EAAiB;IAAA,4DAAK;IAC5I,4DAAK;IACT,4DAAM;IACV,4DAAM;;IALwC,0DAA2C;IAA3C,0JAA2C;;ADLlG,MAAM,aAAa;IACxB,YAAoB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;QAgBhC,YAAO,GAAS,KAAK,CAAC;IAdtB,CAAC;IAED,QAAQ;QACN,mCAAC,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,UAAS,CAAC;YAChC,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,mCAAC,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,MAAM;QAEJ,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACzC,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC1C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,OAAO,GAAC,CAAC,IAAI,CAAC,OAAO,CAAC;IAC7B,CAAC;;0EArBU,aAAa;6FAAb,aAAa;QCT1B,yEAEI;QAAA,yEACI;QAAA,yEACI;QAAA,uEAAY;QAAA,oEAAuD;QAAnE,4DAAY;QAChB,4DAAM;QACN,yEACI;QAAA,qEACI;QAAA,wEAAkJ;QAAA,gEAAK;QAAA,4DAAK;QAC5J,wEAA8G;QAAA,0EAAc;QAAA,4DAAK;QACjI,yEAAkG;QAArB,wIAAS,cAAU,IAAC;QAAC,oEAAQ;QAAA,mEAAmC;QAAA,4DAAK;QAClJ,6GACI;QAQJ,0EAAqG;QAAA,4EAAgB;QAAA,4DAAK;QAC1H,0EAA0G;QAAA,2EAAe;QAAA,4DAAK;QAClI,4DAAK;QACT,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,8EAAyB;QAAA,oEAA6C;QAAA,4DAAS;QACnF,4DAAM;QACN,2EACI;QAAA,sEACI;QAAA,sEAAI;QAAA,wEAAY;QAAA,iEAAK;QAAA,4DAAI;QAAA,sEAA0G;QAAnI,4DAAI;QAEJ,sEAAI;QAAA,yEAAwD;QAA5C,uIAAS,YAAQ,IAAC;QAA0B,mEAAO;QAAA,oEAAiD;QAAA,4DAAI;QACxH,4DAAK;QACT,4DAAK;QACT,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,2EACI;QAAA,4EAA+B;QACnC,4DAAM;QACV,4DAAM;QACV,4DAAM;QAGV,4DAAM;;QAxCiE,0DAA2C;QAA3C,0JAA2C;QAG7F,0DAAe;QAAf,6EAAe;;6FDFvB,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAC,MAAM;gBACf,WAAW,EAAC,uBAAuB;gBACnC,SAAS,EAAC,CAAC,uBAAuB,CAAC;aACpC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,qBAAqB;IAEhC;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0FALU,qBAAqB;qGAArB,qBAAqB;QCPlC,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,oEACA;QAAA,4EAAyD;QAAA,qEAAU;QAAA,4DAAS;QAC9E,4DAAM;QACR,4DAAM;QACR,4DAAM;;6FDAO,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { LoginComponent } from './login/login.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AuthguardGuard } from './authguard.guard';\nimport { ForgetPsswordComponent } from './forget-pssword/forget-pssword.component';\nimport { NotFoundPageComponent } from './main/not-found-page/not-found-page.component';\n\n\nconst routes: Routes = [\n  {path:'', redirectTo:'login',  pathMatch:'full'},\n  {path : 'login', component: LoginComponent},\n  {path : 'forget', component: ForgetPsswordComponent},\n  {path : 'main', canActivate:[AuthguardGuard],   loadChildren: () => import('./main/main.module').then(m => m.MainModule)},\n  {path : 'user',   canActivate:[AuthguardGuard],    loadChildren: () => import('./user/user.module').then(m => m.UserModule)},\n  {path : 'reviewer',  canActivate:[AuthguardGuard],      loadChildren: () => import('./reviewer/reviewer.module').then(m => m.ReviewerModule)},\n  {path : 'approver',  canActivate:[AuthguardGuard],      loadChildren: () => import('./approver/approver.module').then(m => m.ApproverModule)},\n  {path : '**', component: NotFoundPageComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Ifcon';\n}\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { MainComponent } from './main/main.component';\nimport { AuthguardGuard } from './authguard.guard';\nimport { CreateProjectServiceService } from './main/create-project/create-project-service.service';\nimport { ForgetPsswordComponent } from './forget-pssword/forget-pssword.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    MainComponent,\n    ForgetPsswordComponent,\n\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n\n  ],\n  providers: [AuthguardGuard,CreateProjectServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardGuard implements CanActivate {\n  constructor(private router:Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n       if(window.localStorage.getItem('UserId') != null)\n       {\n         return true\n       }\n       else{\n         this.router.navigate(['/login']);\n         return false\n       }\n      return true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forget-pssword',\n  templateUrl: './forget-pssword.component.html',\n  styleUrls: ['./forget-pssword.component.scss']\n})\nexport class ForgetPsswordComponent implements OnInit {\n  loginModel:any={};\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onSubmit()\n  {\n\n  }\n}\n","<div class=\"password_change_forget\">\r\n    <div class=\"signup-form \">\r\n        <form #f='ngForm' (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-header\">\r\n                <h2>Forget Password</h2>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label style=\"width: 100%;\">User Name</label>\r\n                <input type=\"text\" placeholder=\"User Id\" #userId='ngModel' class=\"form-control\" name=\"User Name\" [(ngModel)]=\"loginModel.userid\" ngModel required style=\"width: 100%;\">\r\n                <small class=\"text-danger\" *ngIf=\"!userId.valid && userId.touched\">User Id required</small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label style=\"width: 100%; \">New Password</label>\r\n                <input type=\"password\" placeholder=\"New Password\" minlength=\"5\" #psw=\"ngModel\" class=\"form-control\" name=\"password\" [(ngModel)]=\"loginModel.password\" ngModel required style=\"width: 100%;\">\r\n                <small class=\"text-danger\" *ngIf=\"!psw.valid && psw.touched\">Password must be 5 characters</small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label style=\"width: 100%; \">Confirm Password</label>\r\n                <input type=\"password\" minlength=\"5\" placeholder=\"Confirm Password\" #Cnfpsw=\"ngModel\" class=\"form-control\" name=\"Cnfpassword\" [(ngModel)]=\"loginModel.Cnfpassword\" ngModel required style=\"width: 100%;\">\r\n                <small class=\"text-danger\" *ngIf=\"!Cnfpsw.valid && Cnfpsw.touched\">Password must be 5 characters</small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button type=\"submit\" [disabled]=\"!f.valid\" class=\"btn btn-primary btn-block btn-lg btttn\">Submit </button>\r\n            </div>\r\n            <div class=\"form-group text-left\">\r\n                <button type=\"button\" class=\"btn btn-outline-danger \" routerLink=\"/login\"><i class=\"fa fa-arrow-left\"></i> </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginServiceService {\n\n  constructor() { }\n  Login(userId:string,password:string)\n  {\n\n       if(userId=='admin' && password=='12345')\n        {\n          window.localStorage.setItem('UserId',userId);\n          window.localStorage.setItem('password',password);\n          return 'admin'\n        }\n       else if(userId=='user' && password=='12345')\n        {\n          window.localStorage.setItem('UserId',userId);\n          window.localStorage.setItem('password',password);\n          return 'user'\n        }\n       else if(userId=='reviewer' && password=='12345')\n        {\n          window.localStorage.setItem('UserId',userId);\n          window.localStorage.setItem('password',password);\n          return 'reviewer'\n        }\n       else if(userId=='approval' && password=='12345')\n        {\n          window.localStorage.setItem('UserId',userId);\n          window.localStorage.setItem('password',password);\n          return 'approver'\n        }\n        else\n        {\n          return false;\n        }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginServiceService } from './login-service.service';\nimport { Routes, ActivatedRoute } from '@angular/router';\nimport {Router} from \"@angular/router\";\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\nloginModel:any={};\nmsg:string;\nloader:boolean=false\nreturnUrl: string;\n   AdminreturnUrl: any;\n   UserreturnUrl: any;\n   ResolverreturnUrl: any;\n   ReviewerUserreturnUrl: any;\n   ApproverReturnUsrl: any;\n   myLoginForm:FormGroup;\n   credentials:any;\n  userid: any;\n  password: any;\n  constructor(private _loginService:LoginServiceService,private router:Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n     this.AdminreturnUrl=this.route.snapshot.queryParams['AdminreturnUrl'] || '/main'\n     this.UserreturnUrl=this.route.snapshot.queryParams['UserreturnUrl'] || '/user'\n     this.ResolverreturnUrl=this.route.snapshot.queryParams['ResolverreturnUrl'] || '/reviewer'\n     this.ApproverReturnUsrl=this.route.snapshot.queryParams['ReviewerUserreturnUrl'] || '/approver'\n    //  Reactive Form-\n    this.myLoginForm=new FormGroup(\n      {\n        'userName' :new FormControl(null,Validators.required),\n        'password': new FormControl(null,Validators.required)\n      }\n    )\n  }\n\n  onSubmit()\n  {\n\n\n    this.credentials=this.myLoginForm.value  // Credential where we store the formarray value\n      this.userid=this.credentials.userName // get UserId from form\n      this.password=this.credentials.password // get Password from form\n      var output=this._loginService.Login(this.userid, this.password);\n\n      this.loader = true; // this - is in component object context\n      setTimeout(()=>{    //<<<---    using ()=> syntax\n        this.loader = false;\n   }, 300);\n     if(output==='admin')\n     {\n\n        this.router.navigate([this.AdminreturnUrl])\n     }\n     else if(output==='user')\n     {\n        this.router.navigate([this.UserreturnUrl])\n     }\n     else if(output==='reviewer')\n     {\n        this.router.navigate([this.ResolverreturnUrl])\n     }\n     else if(output==='approver')\n     {\n        this.router.navigate([this.ApproverReturnUsrl])\n     }\n\n     else{\n                this.msg=\"Invalid credentials !\"\n     }\n  }\n\n}\n","<div class=\"password_change_forget\">\r\n    <div class=\"signup-form\">\r\n        <!-- <form #f='ngForm' (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-header\">\r\n                <h2>Sign In</h2>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>User Name</label>\r\n                <input type=\"text\" #userId='ngModel' class=\"form-control\" name=\"User Name\" [(ngModel)]=\"loginModel.userid\" ngModel required >\r\n                <small class=\"text-danger\" *ngIf=\"!userId.valid && userId.touched\">User Id required</small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Password</label>\r\n                <input type=\"password\" minlength=\"5\" #psw=\"ngModel\" class=\"form-control\" name=\"password\" [(ngModel)]=\"loginModel.password\" ngModel required>\r\n                <small class=\"text-danger\" *ngIf=\"!psw.valid && psw.touched\">Password must be 5 characters</small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <small routerLink=\"/forget\">Forget password ?</small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button type=\"submit\" [disabled]=\"!f.valid\" class=\"btn btn-primary btn-block btn-lg\">Sign In ? </button>\r\n            </div>\r\n        </form> -->\r\n\r\n        <form [formGroup]=\"myLoginForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-header\">\r\n                <h2>Sign In</h2>\r\n            </div>\r\n            <h6>{{msg}}</h6>\r\n            <div class=\"form-group\">\r\n                <label>User Name</label>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"userName\" name=\"User Name\">\r\n                <small class=\"text-danger\" *ngIf=\"!myLoginForm.get('userName').valid && myLoginForm.get('userName').touched \">UserId or email required </small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Password</label>\r\n                <input type=\"password\" minlength=\"5\" formControlName=\"password\" class=\"form-control\" name=\"password\">\r\n                <small class=\"text-danger\" *ngIf=\"!myLoginForm.get('password').valid && myLoginForm.get('password').touched \">Password required  </small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <small routerLink=\"/forget\">Forget password ?</small>\r\n            </div>\r\n            <div class=\"form-group text-center\">\r\n                <button type=\"submit\" [disabled]=\"!myLoginForm.valid\" class=\"btn btn-primary btn-block btn-sm\">Sign In  <span class=\"spinner-border spinner-border-sm ml-2\" *ngIf=\"loader\" role=\"status\" aria-hidden=\"true\"></span>\r\n                  </button>\r\n\r\n\r\n\r\n                <!-- <div class=\"loader \" ></div> -->\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateProjectServiceService {\n   porjectData:any;\n  constructor() { }\n\n}\n","import {Component} from '@angular/core';\r\nimport * as $ from 'jquery';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector:'main',\r\n  templateUrl:'./main.component.html',\r\n  styleUrls:['./main.component.scss']\r\n})\r\nexport class MainComponent{\r\n  constructor(private roter:Router){\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    $(\"#menu-toggle\").click(function(e) {\r\n      e.preventDefault();\r\n      $(\"#wrapper\").toggleClass(\"toggled\");\r\n    });\r\n  }\r\n  logout()\r\n  {\r\n    window.localStorage.removeItem('UserId');\r\n    window.localStorage.removeItem('password');\r\n     this.roter.navigate(['/login'])\r\n  }\r\n  submenu:boolean=false;\r\n  subMenu1()\r\n  {\r\n    this.submenu=!this.submenu;\r\n  }\r\n}\r\n","<div id=\"wrapper\">\r\n\r\n    <div class=\"bg-light border-right \" id=\"sidebar-wrapper\">\r\n        <div class=\"sidebar-logo\">\r\n            <a href=\"#\"><img src=\"assets/img/logo.png\" class=\"logo\" alt=\"\"></a>\r\n        </div>\r\n        <div class=\"list-group list-group-flush\">\r\n            <ul>\r\n                <li routerLink=\"/main/users\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\" class=\"list-group-item list-group-item-action\">Users</li>\r\n                <li routerLink=\"/main/projectDetail\" routerLinkActive=\"active\" class=\"list-group-item list-group-item-action\">Project Detail</li>\r\n                <li routerLinkActive=\"active\" class=\"list-group-item list-group-item-action\" (click)=\"subMenu1()\">Licence <i class=\"fa fa-chevron-down \"></i></li>\r\n                <div *ngIf=\"submenu\">\r\n                    <div class=\"dropdown_sidebar\">\r\n                        <ul>\r\n                            <li routerLinkActive=\"check_menu\" [routerLinkActiveOptions]=\"{ exact: true }\" routerLink=\"/main/licence\"> <i class=\"fa fa-check\" aria-hidden=\"true\"></i> View</li>\r\n                            <li routerLinkActive=\"check_menu\" routerLink=\"/main/updateLicence\"> <i class=\"fa fa-check\" aria-hidden=\"true\"></i> Update Licence Key</li>\r\n                            <li routerLinkActive=\"check_menu\" routerLink=\"/main/renewLicence\"> <i class=\"fa fa-check\" aria-hidden=\"true\"></i> Renew Licence Key</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <li routerLink=\"/main/logs\" routerLinkActive=\"active\" class=\"list-group-item list-group-item-action\">View Licence Key</li>\r\n                <li routerLink=\"/main/changePsw\" routerLinkActive=\"active\" class=\"list-group-item list-group-item-action\">Change Password</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div id=\"page-content-wrapper\">\r\n        <div class=\"header_main\">\r\n            <div class=\"Toggle_button\">\r\n                <button id=\"menu-toggle\"><i class=\"fa fa-bars\" aria-hidden=\"true\"></i></button>\r\n            </div>\r\n            <div class=\"manu\">\r\n                <ul>\r\n                    <li><a href=\"#\">Manoj</a><img src=\"assets/img/admin.jpg\" class=\"img-fluid userImage\" alt=\"\" style=\"width: 50px;height: 50px;\"></li>\r\n\r\n                    <li><a href=\"#\" (click)=\"logout()\" style=\"cursor: pointer;\">Logout <i class=\"fa fa-sign-out\" aria-hidden=\"true\"></i></a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"container-fluid\">\r\n            <div class=\"middle-content\">\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found-page',\n  templateUrl: './not-found-page.component.html',\n  styleUrls: ['./not-found-page.component.scss']\n})\nexport class NotFoundPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-lg-12 text-center\">\n      <img src=\"assets/img/notFound.jpg\" class=\"img-fluid\" alt=\"\">\n      <button routerLink=\"/users\" class=\"btn btn-outline-info\">Go to Home</button>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}